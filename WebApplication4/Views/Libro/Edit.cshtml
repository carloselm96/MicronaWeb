@model WebApplication4.Models.libro

@{
    ViewBag.Title = "Editar Libro";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<div class="box">
    <div class="box-header">
        <div class="box-title"> <h3>Artículo</h3></div>
    </div>
    <div class="box-body">


    @using (Html.BeginForm("Edit", "Articulos", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Año, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Año, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Año, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ISBN, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ISBN, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ISBN, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Autores, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Autores, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Autores, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.TipoLibro, "TipoArticulo", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <select class="form-control" , name="TipoArticulo">
                        @foreach (var tp in ViewBag.tipolibro)
                        {
                            if (Model.TipoLibro == tp.idTipoLibro)
                            {
                                <option value="@tp.idTipoLibro" selected>@tp.Nombre</option>
                            }
                            else
                            {
                                <option value="@tp.idTipoLibro">@tp.Nombre</option>
                            }
                        }
                    </select>
                    @Html.ValidationMessageFor(model => model.TipoLibro, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Autores, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Autores, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Autores, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                <label class="control-label col-md-2">Grupo académico</label>
                <div class="col-md-10">
                    <select class="form-control selectpicker" name="GrupoAcademico" multiple>
                        @foreach (var Grupo in ViewBag.grupos)
                        {
                            if (Model.libro_grupo.Where(x => x.id_grupo == Grupo.idGrupoAcademico).FirstOrDefault() != null)
                            {
                                <option value="@Grupo.idGrupoAcademico" selected>@Grupo.Nombre</option>
                            }
                            else
                            {
                                <option value="@Grupo.idGrupoAcademico">@Grupo.Nombre</option>
                            }
                        }
                    </select>
                </div>
            </div>
            @if (Model.archivo1 != null)
            {
            <div class="form-group">
                <label class="control-label col-md-2">Archivo actual: </label>
                <div class="col-md-10">
                    @Html.ActionLink(Model.archivo1.Nombre, "Download", new { Url = Model.archivo1.url, name = Model.archivo1.Nombre })
                </div>
            </div>
            }
            <div class="form-group">
                <label class="control-label col-md-2">Nuevo Archivo</label>
                <div class="col-md-10">
                    <input type="file" name="ffile" class="form-control" accept="application/pdf" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-default" />
                </div>
            </div>           
        </div>            
    }
    <div class="box-footer">
        <div>
            @Html.ActionLink("Regresar a la Lista", "Index")
        </div>
    </div>
</div>

<script src="~/Scripts/jquery-1.10.2.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
