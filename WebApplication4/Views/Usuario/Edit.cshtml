@model WebApplication4.Models.usuario

@{
    ViewBag.Title = "Edit";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}






    <div class="box">
        <div class="box-header">
            <h2>Usuario</h2>
        </div>
        <div class="box-body">
            @{
        if (ViewBag.result != null)
        {
            <div class="alert alert-success">
                <a href="#" class="close" data-dismiss="alert" aria-label="close">&times;</a>
                <strong>Error!</strong> El nombre de usuario ya existe
            </div>
}
            }
            @using (Html.BeginForm("Edit", "Usuario", FormMethod.Post, new { enctype = "multipart/form-data", id = "editUserForm" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.idUsuario,new {id="idUsr" })
        <div class="form-horizontal">
            <div class="form-group">
                @Html.LabelFor(model => model.Nombre, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Apellido_Paterno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Apellido_Paterno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Apellido_Paterno, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Apellido_Materno, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Apellido_Materno, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Apellido_Materno, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Usuario1, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Usuario1, new { htmlAttributes = new { @class = "form-control", id="usrnm" } })
                    @Html.ValidationMessageFor(model => model.Usuario1, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Contraseña, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Contraseña, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Contraseña, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Correo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Correo, new { htmlAttributes = new { @class = "form-control", type="email" } })
                    @Html.ValidationMessageFor(model => model.Correo, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.TipoUsuario, "Tipo Usuario", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownList("TipoUsuario", new List<SelectListItem>
        {
            new SelectListItem { Text = "Administrador",  Value = "1" },
            new SelectListItem { Text = "Estandar",  Value = "2" }
        }, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.TipoUsuario, "", new { @class = "text-danger" })
                </div>
            </div>


        </div>
}
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="button" id="submitUserEdit" value="Guardar" class="btn btn-default" />
                </div>
            </div>
            <div class="box-footer">
                @Html.ActionLink("Regresar a la lista", "Index")
            </div>

        </div>
    </div>
